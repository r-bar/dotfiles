#!/usr/bin/env python3

import sys
import json
from base64 import b64decode
from argparse import ArgumentParser, Namespace
from subprocess import run

class Cli:
    secret_name: str

    args: Namespace
    extra_args: list[str]

    def __init__(self) -> None:
        self.parser = p = ArgumentParser("kubectl view-secret")
        p.add_argument("secret_name", help="Name of the secret")
        self.args, self.extra_args = p.parse_known_intermixed_args()
        for name, val in vars(self.args).items():
            setattr(self, name, val)


def decode(data: bytes) -> str:
    try:
        return b64decode(data).decode("utf-8")
    except UnicodeDecodeError:
        return "<binary data>"


def main() -> None:
    cli = Cli()
    assert isinstance(cli.extra_args, list)
    assert not isinstance(cli.args, list)
    cmd = ("kubectl", "get", "secret", cli.secret_name, *cli.extra_args, "-o", "json")
    print(cmd, file=sys.stderr)
    proc = run(cmd, check=True, capture_output=True)
    if proc.returncode != 0:
        print("Error finding secret", file=sys.stderr)
        sys.stderr.write(proc.stderr)  # type: ignore[arg-type]
        sys.exit(proc.returncode)
    data = json.loads(proc.stdout)
    for data_key, data_val in data["data"].items():
        data["data"][data_key] = decode(data_val)
    json.dump(data, sys.stdout, indent=2)
    sys.stdout.write("\n")


if __name__ == "__main__":
    main()
